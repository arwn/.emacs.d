;;;; this is a config file
(require 'package)
(package-initialize)
(add-to-list 'package-archives
             '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/") t)

;;; Hey there cutie
(use-package diminish :ensure)

(use-package ivy
  :ensure
  :diminish ivy-mode
  :config
  (ivy-mode))

(use-package counsel
  :ensure
  :diminish counsel-mode
  :config
  (counsel-mode))

(use-package swiper
  :ensure
  :config
  (global-set-key "\C-s" 'swiper))

(use-package magit
  :ensure)

(use-package flycheck
  :ensure
  :diminish flycheck-mode
  :config
  (global-flycheck-mode))

(use-package company
  :ensure
  :diminish company-mode
  :config
  (global-company-mode))

(use-package smartparens
  :ensure
  :diminish smartparens-strict-mode
  :diminish smartparens-mode
  :config
  (require 'smartparens-config)
  (add-hook 'prog-mode-hook #'turn-on-smartparens-strict-mode))

(use-package ace-window
  :ensure
  :config
  (global-set-key "\M-o" 'ace-window))

;;; language specific configs
;; lisp
(defvar inferior-lisp-program "/usr/bin/env sbcl")
(use-package sly
  :ensure)

;; golang
(use-package go-mode
  :ensure
  :config
  (setq gofmt-command "goimports")
  (add-hook 'before-save-hook 'gofmt-before-save))

;;; the look and feel of shits
(use-package leuven-theme
  :ensure
  :config
  (load-theme 'leuven t)
  (setq-default flycheck-disabled-checkers '(emacs-lisp-checkdoc)))

(use-package rainbow-delimiters
  :ensure
  :config
  (add-hook 'prog-mode-hook #'rainbow-delimiters-mode))

(use-package markdown-mode
  :ensure)

;;; workflow specific
(use-package org-journal
  :ensure
  :config
  (customize-set-variable 'org-journal-dir "~/documents/journal/"))

;;; misc
(menu-bar-mode 0)
(tool-bar-mode 0)
(scroll-bar-mode 0)

;; very cool kanye
(global-hl-line-mode t)
(show-paren-mode t)

;; automatically wrap text in org mode.
(add-hook 'auto-fill-mode 'org-mode-hook)

;; show marker for empty lines at end of page
(setq-default indicate-empty-lines t)
(when (not indicate-empty-lines)
  (toggle-indicate-empty-lines))
  
(delete-selection-mode t)
(setq make-backup-files nil)
(setq frame-title-format "%b")
(setq inhibit-startup-screen t)

;;; dumb autogenerated stuff
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   (quote
    (elixir-mode go-mode org-journal magit sly ace-window diminish rainbow-delimiters smartparens-config smartparens company flycheck counsel leuven-theme leuven ivy use-package))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
